import {
  Client
} from "./chunk-FLWYXP5Z.js";
import {
  __async
} from "./chunk-NJDRWDQ3.js";

// src/voice-changer/index.ts
var VoiceChanger = class extends Client {
  bytes(options) {
    return __async(this, null, function* () {
      const formData = new FormData();
      formData.append("clip", options.clip);
      formData.append("voice[id]", options.voice.id);
      const fmt = options.output_format;
      formData.append("output_format[container]", fmt.container);
      if ("encoding" in fmt) {
        formData.append("output_format[encoding]", fmt.encoding);
      }
      if ("bit_rate" in fmt) {
        formData.append("output_format[bit_rate]", fmt.bit_rate.toString());
      }
      if ("sample_rate" in fmt) {
        formData.append("output_format[sample_rate]", fmt.sample_rate.toString());
      }
      const response = yield this._fetch("/voice-changer/bytes", {
        method: "POST",
        body: formData
      });
      if (!response.ok) {
        throw new Error(
          `Voice changer error! status: ${response.status}, message: ${yield response.text()}`
        );
      }
      return { buffer: yield response.arrayBuffer() };
    });
  }
};

export {
  VoiceChanger
};
