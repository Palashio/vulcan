import {
  WebSocket
} from "./chunk-CJZSHIRI.js";
import {
  Client
} from "./chunk-FLWYXP5Z.js";
import {
  __async
} from "./chunk-NJDRWDQ3.js";

// src/tts/index.ts
var TTS = class extends Client {
  /**
   * Get a WebSocket client for streaming audio from the TTS API.
   *
   * @returns {WebSocket} A Cartesia WebSocket client.
   */
  websocket(options) {
    return new WebSocket(options, {
      apiKey: this.apiKey,
      baseUrl: this.baseUrl
    });
  }
  /**
   * Generate audio bytes from text.
   *
   * @param options - The options for the request.
   * @returns {Promise<ArrayBuffer>} A promise that resolves to an ArrayBuffer containing the audio bytes.
   */
  bytes(options) {
    return __async(this, null, function* () {
      const response = yield this._fetch("/tts/bytes", {
        method: "POST",
        body: JSON.stringify(options)
      });
      return response.arrayBuffer();
    });
  }
};

export {
  TTS
};
